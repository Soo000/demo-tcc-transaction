<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <util:properties id="jdbc" location="classpath:jdbc.properties"/>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://192.168.1.118:3306/TCC"/>
        <property name="username" value="root"/>
        <property name="password" value="1qaz@WSX"/>
    </bean>

    <bean id="transactionRepository"
          class="org.mengyun.tcctransaction.spring.repository.SpringJdbcTransactionRepository">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 恢复策略 -->
    <bean class="org.mengyun.tcctransaction.spring.recover.DefaultRecoverConfig">
        <property name="maxRetryCount" value="30"/>
        <property name="recoverDuration" value="120"/>
        <property name="cronExpression" value="0 */1 * * * ?"/>
        <property name="delayCancelExceptions">
            <util:set>
                <value>com.alibaba.dubbo.remoting.TimeoutException</value>
            </util:set>
        </property>
    </bean>

    <bean id="redPacketDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close" lazy-init="false">
        <property name="driverClass" value="#{jdbc['jdbc.driverClassName']}"/>
        <property name="jdbcUrl" value="#{jdbc['jdbc.url']}"/>
        <property name="user" value="#{jdbc['jdbc.username']}"/>
        <property name="password" value="#{jdbc['jdbc.password']}"/>
        <property name="initialPoolSize" value="#{jdbc['c3p0.initialPoolSize']}"/>
        <property name="minPoolSize" value="#{jdbc['c3p0.minPoolSize']}"/>
        <property name="maxPoolSize" value="#{jdbc['c3p0.maxPoolSize']}"/>
        <property name="acquireIncrement" value="#{jdbc['c3p0.acquireIncrement']}"/>
        <property name="maxIdleTime" value="#{jdbc['c3p0.maxIdleTime']}"/>
        <property name="checkoutTimeout" value="#{jdbc['c3p0.checkoutTimeout']}"/>
    </bean>

    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="redPacketDataSource"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="redPacketDataSource"/>
        <property name="mapperLocations" value="classpath*:sqlmap/sample-*.xml"/>
    </bean>

    <bean id="redpacketAccountDAO" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="com.kkwrite.demo.redpacket.dao.RedPacketAccountDAO" />
        <property name="sqlSessionFactory" ref="sqlSessionFactory" />
    </bean>

    <bean id="tradeOrderDAO" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="com.kkwrite.demo.redpacket.dao.TradeOrderDAO"/>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>

</beans>